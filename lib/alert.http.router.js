'use strict';


/**
 * @apiDefine Alert  Alert
 *
 * @apiDescription A representation of an envelope(or payload) which carries
 * disaster notifications(or warning) from source(s) to audience(s).
 *
 * A disaster alert is generated by a specific situation. The main features of an
 * alert is that it is not predictable and it is not a recurrent data. That
 * means that an alert could be an accident or a high level of pollutants
 * measure.
 *
 * @author lally elias <lallyelias87@gmail.com>
 * @license MIT
 * @since  0.1.0
 * @version 1.0.0
 * @public
 */


/**
 * @apiDefine Alert
 * @apiSuccess {String} _id Unique alert identifier
 * @apiSuccess {Object} source A party(or source or authority etc) issuing
 * alert(or warning or notification).
 * @apiSuccess {Object} event Denoting type of the subject of the alert.
 * @apiSuccess {Object} message Denoting message of the alert.
 * @apiSuccess {Object} area Delineation of area(s) that may be
 * affected by the alert.
 * @apiSuccess {Object[]} [resource] Additional file with supplemental
 * information related to alert message e.g. an image or audio file.
 * @apiSuccess {Date} reportedAt Date and time the alert was issued(or
 * generated) by the alert source(or generator) e.g 2018-07-28 23:53:19 etc.
 * @apiSuccess {Date} [expectedAt] The expected time of the beginning of the
 * subject event of the alert message e.g 2018-02-01T16:49:00
 * @apiSuccess {Date} expiredAt The expiry time of the information of the
 * alert message e.g 2018-03-03T11:19:00
 * @apiSuccess {Date} occuredAt The effective time of the information of the
 * alert message e.g e.g 2018-02-01T15:19:00
 * @apiSuccess {Date} [endedAt] The effective date and time when alert
 * occurance ended e.g 2018-02-01T15:19:00
 * @apiSuccess {String} [direction=Inbound] Human readable direction(received
 * or given) of the alert i.e Inbound or Outbound.
 * @apiSuccess {Date} createdAt Date when alert was created.
 * @apiSuccess {Date} updatedAt Date when alert was last updated.
 */


/**
 * @apiDefine Alerts
 * @apiSuccess {Object[]} data List of alerts
 * @apiSuccess {String} data._id Unique alert identifier
 * @apiSuccess {Object} data.source A party(or source or authority etc) issuing
 * alert(or warning or notification).
 * @apiSuccess {Object} data.event Denoting type of the subject of the alert.
 * @apiSuccess {Object} data.message Denoting message of the alert.
 * @apiSuccess {Object} data.area Delineation of area(s) that may be
 * affected by the alert.
 * @apiSuccess {Object[]} [data.resource] Additional file with supplemental
 * information related to alert message e.g. an image or audio file.
 * @apiSuccess {Date} data.reportedAt Date and time the alert was issued(or
 * generated) by the alert source(or generator) e.g 2018-07-28 23:53:19 etc.
 * @apiSuccess {Date} [data.expectedAt] The expected time of the beginning of the
 * subject event of the alert message e.g 2018-02-01T16:49:00
 * @apiSuccess {Date} data.expiredAt The expiry time of the information of the
 * alert message e.g 2018-03-03T11:19:00
 * @apiSuccess {Date} data.occuredAt The effective time of the information of the
 * alert message e.g e.g 2018-02-01T15:19:00
 * @apiSuccess {Date} [data.endedAt] The effective date and time when alert
 * occurance ended e.g 2018-02-01T15:19:00
 * @apiSuccess {String} [data.direction=Inbound] Human readable direction(received
 * or given) of the alert i.e Inbound or Outbound.
 * @apiSuccess {Date} data.createdAt Date when alert was created.
 * @apiSuccess {Date} data.updatedAt Date when alert was last updated.
 * @apiSuccess {Number} total Total number of alert
 * @apiSuccess {Number} size Number of alert returned
 * @apiSuccess {Number} limit Query limit used
 * @apiSuccess {Number} skip Query skip/offset used
 * @apiSuccess {Number} page Page number
 * @apiSuccess {Number} pages Total number of pages
 * @apiSuccess {Date} lastModified Date and time at which latest alert
 * was last modified
 */


/**
 * @apiDefine AlertSuccessResponse
 * @apiSuccessExample {json} Success-Response:
 *{
 *    _id: "5bb25b91265be953c92f1521",
 *    source:
 *    {
 *        name: "Nicolas - Gulgowski",
 *        phone: "509.465.8501",
 *        email: "phoebe_borer26@yahoo.com",
 *        website: "https://waylon.com"
 *    },
 *    event:
 *    {
 *        code: "de2ed472-b3c5-44da-902d-51e96fc6e7ad",
 *        name: "Sit sit nisi earum maiores commodi voluptatum illum.",
 *        category: "Safety",
 *        description: "Et et doloremque iusto nihil eos nam in consequatur.",
 *        urgency: "Past",
 *        severity: "Moderate",
 *        certainty: "Unlikely",
 *        response: "Shelter"
 *    },
 *    message:
 *    {
 *        status: "System",
 *        type: "Ask",
 *        scope: "Restricted",
 *        restriction: "Necessitatibus est quod.",
 *        addresses: ["mervin16@yahoo.com"],
 *        code: "azure",
 *        note: "Pariatur repellat dignissimos quas.",
 *        headline: "Ipsa animi impedit officia.",
 *        instruction: "Perspiciatis repudiandae doloribus.",
 *        website: "http://ashly.net"
 *    },
 *    area:
 *    {
 *        description: "Borders",
 *        geometry:
 *        {
 *            type: "Polygon",
 *            coordinates: [
 *                [
 *                    [44.184551651362, -1.6081961004244478],
 *                    [41.21125601611241, -8.010221783743527],
 *                    [37.854639889998076, -7.8464285284416935],
 *                    [36.51791603953068, -11.054968936423933],
 *                    [33.01453708697774, -15.497233831943916],
 *                    [32.784868513491695, -13.29610438543305],
 *                    [35.67894312439057, -7.63634997688592],
 *                    [30.492728316323237, -8.692066624888076],
 *                    [31.689532286539443, -2.864154032119321],
 *                    [37.13965577600533, -5.922104559306792],
 *                    [44.184551651362, -1.6081961004244478]
 *                ]
 *            ]
 *        },
 *        altitude: 3263313890770944,
 *        ceiling: 2341686824927232
 *    },
 *    resources: [
 *    {
 *        description: "Exercitationem nobis",
 *        mime: "audio/evrc1",
 *        uri: "https://s3.amazonaws.com/uifaces/faces/twitter/falvarad/128.jpg"
 *    }],
 *    reportedAt: "2018-09-05T06:51:49.629Z",
 *    expectedAt: "2018-09-06T23:38:11.062Z",
 *    expiredAt: "2018-09-29T09:45:30.790Z",
 *    occuredAt: "2018-08-30T20:52:56.029Z",
 *    endedAt: "2018-09-08T07:18:46.205Z",
 *    direction: "Inbound",
 *    updatedAt: "2018-10-01T17:38:26.066Z",
 *    createdAt: "2018-10-01T17:38:26.066Z"
 *}
 */


/**
 * @apiDefine AlertsSuccessResponse
 * @apiSuccessExample {json} Success-Response:
 *{
 * data:[
 *  {
 *    _id: "5bb25b91265be953c92f1521",
 *    source:
 *    {
 *        name: "Nicolas - Gulgowski",
 *        phone: "509.465.8501",
 *        email: "phoebe_borer26@yahoo.com",
 *        website: "https://waylon.com"
 *    },
 *    event:
 *    {
 *        code: "de2ed472-b3c5-44da-902d-51e96fc6e7ad",
 *        name: "Sit sit nisi earum maiores commodi voluptatum illum.",
 *        category: "Safety",
 *        description: "Et et doloremque iusto nihil eos nam in consequatur.",
 *        urgency: "Past",
 *        severity: "Moderate",
 *        certainty: "Unlikely",
 *        response: "Shelter"
 *    },
 *    message:
 *    {
 *        status: "System",
 *        type: "Ask",
 *        scope: "Restricted",
 *        restriction: "Necessitatibus est quod.",
 *        addresses: ["mervin16@yahoo.com"],
 *        code: "azure",
 *        note: "Pariatur repellat dignissimos quas.",
 *        headline: "Ipsa animi impedit officia.",
 *        instruction: "Perspiciatis repudiandae doloribus.",
 *        website: "http://ashly.net"
 *    },
 *    area:
 *    {
 *        description: "Borders",
 *        geometry:
 *        {
 *            type: "Polygon",
 *            coordinates: [
 *                [
 *                    [44.184551651362, -1.6081961004244478],
 *                    [41.21125601611241, -8.010221783743527],
 *                    [37.854639889998076, -7.8464285284416935],
 *                    [36.51791603953068, -11.054968936423933],
 *                    [33.01453708697774, -15.497233831943916],
 *                    [32.784868513491695, -13.29610438543305],
 *                    [35.67894312439057, -7.63634997688592],
 *                    [30.492728316323237, -8.692066624888076],
 *                    [31.689532286539443, -2.864154032119321],
 *                    [37.13965577600533, -5.922104559306792],
 *                    [44.184551651362, -1.6081961004244478]
 *                ]
 *            ]
 *        },
 *        altitude: 3263313890770944,
 *        ceiling: 2341686824927232
 *    },
 *    resources: [
 *    {
 *        description: "Exercitationem nobis",
 *        mime: "audio/evrc1",
 *        uri: "https://s3.amazonaws.com/uifaces/faces/twitter/falvarad/128.jpg"
 *    }],
 *    reportedAt: "2018-09-05T06:51:49.629Z",
 *    expectedAt: "2018-09-06T23:38:11.062Z",
 *    expiredAt: "2018-09-29T09:45:30.790Z",
 *    occuredAt: "2018-08-30T20:52:56.029Z",
 *    endedAt: "2018-09-08T07:18:46.205Z",
 *    direction: "Inbound",
 *    updatedAt: "2018-10-01T17:38:26.066Z",
 *    createdAt: "2018-10-01T17:38:26.066Z"
 *  }
 * ],
 * total: 10,
 * size: 2,
 * limit: 2,
 * skip: 0,
 * page: 1,
 * pages: 5,
 * lastModified: "2018-05-06T10:19:04.910Z"
 *}
 *
 */

/* @todo expose /alerts/units */

/* dependencies */
const path = require('path');
const _ = require('lodash');
const Router = require('@lykmapipo/express-common').Router;
const { env } = require('@codetanzania/majifix-common');


/* local constants */
const API_VERSION = env.API_VERSION;
const PATH_LIST = '/alerts';
const PATH_SINGLE = '/alerts/:id';


/* declarations */
const Alert = require(path.join(__dirname, 'alert.model'));
const router = new Router({
  version: API_VERSION
});


/**
 * @api {get} /alerts List Alerts
 * @apiVersion 1.0.0
 * @apiName GetAlerts
 * @apiGroup Alert
 * @apiDescription Returns a list of alerts
 * @apiUse RequestHeaders
 * @apiUse Alerts
 *
 *
 * @apiUse RequestHeadersExample
 * @apiUse AlertsSuccessResponse
 * @apiUse JWTError
 * @apiUse JWTErrorExample
 * @apiUse AuthorizationHeaderError
 * @apiUse AuthorizationHeaderErrorExample
 */
router.get(PATH_LIST, function getAlerts(request, response, next) {

  //obtain request options
  const options = _.merge({}, request.mquery);

  Alert
    .get(options, function onGetAlerts(error, results) {

      //forward error
      if (error) {
        next(error);
      }

      //handle response
      else {
        response.status(200);
        response.json(results);
      }

    });

});


/**
 * @api {post} /alerts Create New Alert
 * @apiVersion 1.0.0
 * @apiName PostAlert
 * @apiGroup Alert
 * @apiDescription Create new alert
 * @apiUse RequestHeaders
 * @apiUse Alert
 *
 *
 * @apiUse RequestHeadersExample
 * @apiUse AlertSuccessResponse
 * @apiUse JWTError
 * @apiUse JWTErrorExample
 * @apiUse AuthorizationHeaderError
 * @apiUse AuthorizationHeaderErrorExample
 */
router
  .post(PATH_LIST, function postAlert(request, response, next) {

    //obtain request body
    const body = _.merge({}, request.body);

    Alert
      .post(body, function onPostAlert(error, created) {

        //forward error
        if (error) {
          next(error);
        }

        //handle response
        else {
          response.status(201);
          response.json(created);
        }

      });

  });


/**
 * @api {get} /alerts/:id Get Existing Alert
 * @apiVersion 1.0.0
 * @apiName GetAlert
 * @apiGroup Alert
 * @apiDescription Get existing alert
 * @apiUse RequestHeaders
 * @apiUse Alert
 *
 *
 * @apiUse RequestHeadersExample
 * @apiUse AlertSuccessResponse
 * @apiUse JWTError
 * @apiUse JWTErrorExample
 * @apiUse AuthorizationHeaderError
 * @apiUse AuthorizationHeaderErrorExample
 */
router
  .get(PATH_SINGLE, function getAlert(request, response, next) {

    //obtain request options
    const options = _.merge({}, request.mquery);

    //obtain alert id
    options._id = request.params.id;

    Alert
      .getById(options, function onGetAlert(error, found) {

        //forward error
        if (error) {
          next(error);
        }

        //handle response
        else {
          response.status(200);
          response.json(found);
        }

      });

  });


/**
 * @api {patch} /alerts/:id Patch Existing Alert
 * @apiVersion 1.0.0
 * @apiName PatchAlert
 * @apiGroup Alert
 * @apiDescription Patch existing alert
 * @apiUse RequestHeaders
 * @apiUse Alert
 *
 *
 * @apiUse RequestHeadersExample
 * @apiUse AlertSuccessResponse
 * @apiUse JWTError
 * @apiUse JWTErrorExample
 * @apiUse AuthorizationHeaderError
 * @apiUse AuthorizationHeaderErrorExample
 */
router
  .patch(PATH_SINGLE, function patchAlert(request, response, next) {

    //obtain alert id
    const { id } = request.params;

    //obtain request body
    const patches = _.merge({}, request.body);

    Alert
      .patch(id, patches, function onPatchAlert(error, patched) {

        //forward error
        if (error) {
          next(error);
        }

        //handle response
        else {
          response.status(200);
          response.json(patched);
        }

      });

  });


/**
 * @api {put} /alerts/:id Put Existing Alert
 * @apiVersion 1.0.0
 * @apiName PutAlert
 * @apiGroup Alert
 * @apiDescription Put existing alert
 * @apiUse RequestHeaders
 * @apiUse Alert
 *
 *
 * @apiUse RequestHeadersExample
 * @apiUse AlertSuccessResponse
 * @apiUse JWTError
 * @apiUse JWTErrorExample
 * @apiUse AuthorizationHeaderError
 * @apiUse AuthorizationHeaderErrorExample
 */
router
  .put(PATH_SINGLE, function putAlert(request, response, next) {

    //obtain alert id
    const { id } = request.params;

    //obtain request body
    const updates = _.merge({}, request.body);

    Alert
      .put(id, updates, function onPutAlert(error, updated) {

        //forward error
        if (error) {
          next(error);
        }

        //handle response
        else {
          response.status(200);
          response.json(updated);
        }

      });

  });


/**
 * @api {delete} /alerts/:id Delete Existing Alert
 * @apiVersion 1.0.0
 * @apiName DeleteAlert
 * @apiGroup Alert
 * @apiDescription Delete existing alert
 * @apiUse RequestHeaders
 * @apiUse Alert
 *
 *
 * @apiUse RequestHeadersExample
 * @apiUse AlertSuccessResponse
 * @apiUse JWTError
 * @apiUse JWTErrorExample
 * @apiUse AuthorizationHeaderError
 * @apiUse AuthorizationHeaderErrorExample
 */
router
  .delete(PATH_SINGLE, function deleteAlert(request, response, next) {

    //obtain alert id
    const { id } = request.params;

    Alert
      .del(id, function onDeleteAlert(error, deleted) {

        //forward error
        if (error) {
          next(error);
        }

        //handle response
        else {
          response.status(200);
          response.json(deleted);
        }

      });

  });


/* expose router */
module.exports = router;
